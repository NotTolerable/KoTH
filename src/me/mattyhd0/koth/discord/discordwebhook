me.mattyhd0.koth.discord.discordwebhook

import java.awt.Color;
import java.io.File;
import java.io.IOException;

import org.bukkit.Bukkit;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.server.PluginEnableEvent;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.JDA;
import net.dv8tion.jda.api.JDABuilder;
import net.dv8tion.jda.api.entities.MessageEmbed;
import net.dv8tion.jda.api.entities.TextChannel;

public class DiscordWebhook implements Listener {

    private final String configFile = "discordwebhook.yml";
    private String webhookUrl;
    private String embedTitle;
    private String embedDescription;
    private String embedFooter;
    private String embedThumbnailUrl;
    private Color embedColor;

    private JDA jda;

    public DiscordWebhook() {
        loadConfig();
        connectJda();
        Bukkit.getPluginManager().registerEvents(this, KoTHPlugin.getInstance());
    }

    private void loadConfig() {
        File file = new File(KoTHPlugin.getInstance().getDataFolder(), configFile);
        if (!file.exists()) {
            KoTHPlugin.getInstance().saveResource(configFile, false);
        }
        FileConfiguration config = YamlConfiguration.loadConfiguration(file);
        webhookUrl = config.getString("webhook-url");
        embedTitle = config.getString("embed.title");
        embedDescription = config.getString("embed.description");
        embedFooter = config.getString("embed.footer");
        embedThumbnailUrl = config.getString("embed.thumbnail-url");
        embedColor = Color.decode(config.getString("embed.color"));
    }

    private void connectJda() {
        try {
            jda = JDABuilder.createDefault(webhookUrl).build();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void sendEmbedMessage(MessageEmbed embed) {
        if (jda == null) {
            connectJda();
        }
        if (jda != null) {
            TextChannel channel = jda.getTextChannelById(getChannelId());
            if (channel != null) {
                channel.sendMessageEmbeds(embed).queue();
            }
        }
    }

    private String getChannelId() {
        String[] parts = webhookUrl.split("/");
        return parts[parts.length - 2];
    }

    @EventHandler
    public void onKothStart(KothStartEvent event) {
        EmbedBuilder builder = new EmbedBuilder();
        builder.setTitle(embedTitle);
        builder.setDescription(embedDescription);
        builder.setFooter(embedFooter);
        builder.setThumbnail(embedThumbnailUrl);
        builder.setColor(embedColor);
        sendEmbedMessage(builder.build());
    }

    @EventHandler
    public void onPluginEnable(PluginEnableEvent event) {
        if (event.getPlugin() == KoTHPlugin.getInstance()) {
            loadConfig();
            connectJda();
        }
    }
}
